{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Odoo+Docker\u3088\u3046\u3053\u305d\uff01 Welcome to my own documentation of installing Odoo with Docker! Authored by luigi-2ba3 To get started, navigate through the navigation bar on top or click Next ->","title":"Home"},{"location":"#odoodocker","text":"Welcome to my own documentation of installing Odoo with Docker! Authored by luigi-2ba3 To get started, navigate through the navigation bar on top or click Next ->","title":"Odoo+Docker\u3088\u3046\u3053\u305d\uff01"},{"location":"install/","text":"Installing Odoo with Docker Prerequisites Docker Desktop (includes Docker CLI) Installation Proper Reference 1) Install and run a PostgresSQL container: docker run -d -e POSTGRES_USER=odoo -e POSTGRES_PASSWORD=odoo 2) Install and run an Odoo instance and make sure to have the tag as -t odoo:16.0 with an appended :16.0 (for projects that require a specific version of Odoo to be developed on): docker run -p 8069:8069 --name odoo --link db:db -t odoo:16.0 3) Visit 127.0.0.1:8089 or whichever local IP was assigned with port number 8069 Docker Crash Course Start and Stop an Instance/Container Above, we set up an Odoo container with the tag odoo:16.0 , hence the name of the container we made is odoo docker stop odoo docker start -a odoo Delete a Container Should you wish to delete the odoo container if you run to an error that an already existing container with the odoo name already taken, get its container ID with docker ps -a A sample output would be: CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES ef3535b3afe3 da2782e8f015 \"/bin/sh -c 'echo Co\u2026\" 2 hours ago Exited (0) 2 hours ago cranky_haslett 7d0d5b20d3d0 odoo:16.0 \"/entrypoint.sh odoo\" 2 hours ago Up 2 hours 0.0.0.0:8069->8069/tcp, 8071-8072/tcp odoo 93ca78717132 postgres:15 \"docker-entrypoint.s\u2026\" 2 hours ago Up 2 hours 5432/tcp db In this case, 7d0d5b20d3d0 is the container ID of the Odoo instance, which is indicative of the image used, odoo:16.0 . Stop the container, then delete it: docker rm 7d0d5b20d3d0 Delete a Volume In Installation Proper , we executed docker run for both PostgreSQL and Odoo, which created two volumes with arbitrary names, as the case here in this sample screenshot in Docker Desktop. To verify which volume point to which container, for example in Docker Desktop, click on a volume then Container-in-use tab. In this example, this volume with a starting id of 9c813de is the volume for our PostgreSQL container. In Docker Desktop, you can drop the Postgre database and/or delete the entire Odoo instance by clicking on the red Trash icon, either from Volumes tab or the view of the container itself.","title":"Odoo + Docker"},{"location":"install/#installing-odoo-with-docker","text":"","title":"Installing Odoo with Docker"},{"location":"install/#prerequisites","text":"Docker Desktop (includes Docker CLI)","title":"Prerequisites"},{"location":"install/#installation-proper","text":"Reference 1) Install and run a PostgresSQL container: docker run -d -e POSTGRES_USER=odoo -e POSTGRES_PASSWORD=odoo 2) Install and run an Odoo instance and make sure to have the tag as -t odoo:16.0 with an appended :16.0 (for projects that require a specific version of Odoo to be developed on): docker run -p 8069:8069 --name odoo --link db:db -t odoo:16.0 3) Visit 127.0.0.1:8089 or whichever local IP was assigned with port number 8069","title":"Installation Proper"},{"location":"install/#docker-crash-course","text":"","title":"Docker Crash Course"},{"location":"install/#start-and-stop-an-instancecontainer","text":"Above, we set up an Odoo container with the tag odoo:16.0 , hence the name of the container we made is odoo docker stop odoo docker start -a odoo","title":"Start and Stop an Instance/Container"},{"location":"install/#delete-a-container","text":"Should you wish to delete the odoo container if you run to an error that an already existing container with the odoo name already taken, get its container ID with docker ps -a A sample output would be: CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES ef3535b3afe3 da2782e8f015 \"/bin/sh -c 'echo Co\u2026\" 2 hours ago Exited (0) 2 hours ago cranky_haslett 7d0d5b20d3d0 odoo:16.0 \"/entrypoint.sh odoo\" 2 hours ago Up 2 hours 0.0.0.0:8069->8069/tcp, 8071-8072/tcp odoo 93ca78717132 postgres:15 \"docker-entrypoint.s\u2026\" 2 hours ago Up 2 hours 5432/tcp db In this case, 7d0d5b20d3d0 is the container ID of the Odoo instance, which is indicative of the image used, odoo:16.0 . Stop the container, then delete it: docker rm 7d0d5b20d3d0","title":"Delete a Container"},{"location":"install/#delete-a-volume","text":"In Installation Proper , we executed docker run for both PostgreSQL and Odoo, which created two volumes with arbitrary names, as the case here in this sample screenshot in Docker Desktop. To verify which volume point to which container, for example in Docker Desktop, click on a volume then Container-in-use tab. In this example, this volume with a starting id of 9c813de is the volume for our PostgreSQL container. In Docker Desktop, you can drop the Postgre database and/or delete the entire Odoo instance by clicking on the red Trash icon, either from Volumes tab or the view of the container itself.","title":"Delete a Volume"},{"location":"using/","text":"Using Docker First-Time Setup When entering your local server hosting both your Postgre and Odoo containers, you'll be greeted with this page: For development purposes, you can supply these credentials with familiar or dummy details. For production, these should be secured however. Afterwards, you'll be greeted with a login page. Simply supply these with the credentials you entered in the previous page. You'll be greeted with the dashboard of your Odoo instance. Invoking Debug Mode For more in-depth purposes, especially when creating custom add-ons or modules, summon the command bar by pressing CTRL + K or CMD + K on Mac. Type debug and select the first option. The page will refresh which should now show additional items in the navigation bar and a \"bug\" icon to the top right.","title":"Using Odoo"},{"location":"using/#using-docker","text":"","title":"Using Docker"},{"location":"using/#first-time-setup","text":"When entering your local server hosting both your Postgre and Odoo containers, you'll be greeted with this page: For development purposes, you can supply these credentials with familiar or dummy details. For production, these should be secured however. Afterwards, you'll be greeted with a login page. Simply supply these with the credentials you entered in the previous page. You'll be greeted with the dashboard of your Odoo instance.","title":"First-Time Setup"},{"location":"using/#invoking-debug-mode","text":"For more in-depth purposes, especially when creating custom add-ons or modules, summon the command bar by pressing CTRL + K or CMD + K on Mac. Type debug and select the first option. The page will refresh which should now show additional items in the navigation bar and a \"bug\" icon to the top right.","title":"Invoking Debug Mode"}]}